1.  Write a C program to read file contents and display on console  

#include <stdio.h>
#include <stdlib.h>
int main()
{
    FILE * fPtr;
    char ch;
    fPtr = fopen("data/file1.txt", "r");
    if(fPtr == NULL)
    {
        printf("Unable to open file.\n");
        printf("Please check whether file exists.\n");
        exit(EXIT_FAILURE);
    }
    printf("File opened successfully. Reading file contents character \n");
    do 
    {
        ch = fgetc(fPtr);
        putchar(ch);
    } while(ch != EOF); /* Repeat this if last read character is not EOF */
    fclose(fPtr);
    return 0;
}




2.  Write a C program to read file contents and display on console  

#include <stdio.h>
#include <stdlib.h>
int main()
{
    FILE * fPtr;
    char ch;
    fPtr = fopen("data/file1.txt", "r");
    if(fPtr == NULL)
    {
        printf("Unable to open file.\n");
        printf("Please check whether file exists.\n");
        exit(EXIT_FAILURE);
    }
    printf("File opened successfully. Reading file contents character \n");
    do 
    {
        ch = fgetc(fPtr);
        putchar(ch);
    }
    while(ch != EOF); /* Repeat this if last read character is not EOF */
    fclose(fPtr);
    return 0;
}





3.Write a C program to input elements in array and sort array elements in ascending or descending order.   

#include <stdio.h>     
int main()  
{ 
  int a[]={20, 2, 10, 6, 52, 31, 0, 45, 79, 40}; 
  int temp,i,j; 
  int len=sizeof(a)/sizeof(a[0]); 
  for( i=0;i<len;i++) 
  { 
       printf("\t%d",a[i]); 
  } 
  for( i=0;i<len;i++) 
    { 
    for( j=i+1;j<len;j++) 
    { 
      if(a[i]>a[j]) 
      { 
      int temp=a[i]; 
      a[i]=a[j]; 
      a[j]=temp; 
      } 
    } 
    } 
    printf("\n"); 
    for(i=0;i<len;i++) 
    { 
     printf("\t%d",a[i]); 
    } 
    } 



4.Write a C program to input elements in array and search an element in array using pointers. 

#include<stdio.h>
int main()
{
    int arr[5],*p,n,i,x;
    printf("Enter elements: ");
    for(i=0;i<5;i++)
    scanf("%d",&arr[i]);
    printf("Enter search element: ");
    scanf("%d",&x);
    p=arr;
    for(i=0;i<5;i++)
    {
        if(x== *p)
        {
            printf("%d is present at position %d\n",x,i+1);
            break;
        }
        p++;
    }
    if(i==5)
    printf("%d is not present in array\n",x);
}



5. Decimal to binary conversion

#include <stdio.h>
int main()
{
  int num, c, result;
  printf("Enter number\n");
  scanf("%d", &num);
  for (c = 31; c >= 0; c--)
  {
    result = num >> c;
    if (result & 1)
      printf("1");
    else
      printf("0");
  }
  printf("\n");
  return 0;
}



6. Bitwise operators

#include <stdio.h>
int main()
{
    int bit, sel, pos;
    printf("Enter a number: ");
    scanf("%d",&bit);
    printf("\n1: Set, 2: Clear, 3: Toggle, 4: Test, 5: Extract");
    scanf("%d",&sel);
    switch(sel)
    {
        case 1:
        printf("\nEnter position: ");
        scanf("%d",&pos);
        bit|=1<<(pos-1);
        printf("New Value: %d",bit);
        break;
        
        case 2:
        printf("\nEnter position: ");
        scanf("%d",&pos);
        bit&=(~(1<<(pos-1)));
        printf("New Value: %d",bit);
        break;
        
        case 3:
        printf("\nEnter position: ");
        scanf("%d",&pos);
        bit^=1<<(pos-1);
        printf("New Value: %d",bit);
        break;
        
        case 4:
        printf("\nEnter position: ");
        scanf("%d",&pos);
        if(bit & (1<<pos-1))
		printf("\nBit number %d is SET in number %d.",pos,bit);
	    else
		printf("\nBit number %d is not SET in number %d.",pos,bit);
        break;
        
        case 5:
        printf("\nEnter position: ");
        scanf("%d",&pos);
        if(bit & (1<<pos-1))
		printf("\nBit number %d is 1 of %d.",pos,bit);
	    else
		printf("\nBit number %d is 0 of %d.",pos,bit);
        break;
        
        default:
        printf("\nWrong Input");
        break;
        
    }
    return 0;
}



7.Write a C program of using function pointer. (i) add function (ii) sub function 
#include <stdio.h>

int add (int , int );
int sub (int , int );
int main() {
  int a=5,b=3,c=0;
  int (*ptr[2]) (int,int) = {add,sub};
  c = (*ptr[0]) (a,b);
  printf("\n sum: %d",c);
  c = (*ptr[1]) (a,b);
  printf("\n diff: %d",c);
  return 0;
}
int add (int a, int b) {
   int sum = a + b;
   return sum;
}
int sub (int a, int b) {
    int diff = a - b;
    return diff;
}



8.suqare using macro 

#include <stdio.h>
#define square(a) (a*a)
int main() {
  int b=5;
  printf("Square of number: %d",Square(b));
  return 0;
}














