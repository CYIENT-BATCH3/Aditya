                                                                     programms on array---
 ----------------------------------------------------------------Program to print array in C--------------------------------------------------------------------------
#include<stdio.h>
int main()
{
    int len;
	int arr[len],i,j;
	printf("enter the lenght of array\n");
	scanf("%d",&len);
	printf("enter the elements of array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
	for(j=0;j<len;j++)
	{
		printf("%d",arr[j]);
	}
	return 0;
}

 ---------------------------------------------------------------Program to sum the values of array in C----------------------------------------------------------------
#include<stdio.h>
int main()
{
  	int arr[1000],i,j,sum=0,len;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	printf("enter the elements of the array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
	for(j=0;j<len;j++)
	{
		sum=sum+arr[j];
	}
	printf("the sum of all the elements in the array is=%d",sum);
	return 0;
}


----------------------------------------------------Programm to find the Average Marks obtained by a class of ‘n’ Students---------------------------------------------

#include<stdio.h>
int main()
{
	int marks[1000],i,j,sum=0,len;
	float avg=0;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	printf("enter the marks  of the student\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&marks[i]);
	}
	for(j=0;j<len;j++)
	{
		sum=sum+marks[j];
	}
	avg=sum/len;
	printf("the avg marks of the student is=%f",avg);
	return 0;
}

------------------------------------------------------------Programm to find the size of an array in C----------------------------------------------------------------

int main()
 {
     int int_arrays[100];
     float real_arrays[10];
     char char_arrays[100];
     float float_arrays[20];
     printf("Size of the Intger Arrays = %d bytes",sizeof(int_arrays));
     printf("\nSize of the Real Arrays = %d bytes",sizeof(real_arrays));
     printf("\nSize of the Character Arrays = %d bytes",sizeof(char_arrays));
     printf("\nSize of the float Arrays = %d bytes",sizeof(float_arrays));
     return 0;
 }



------------------------------------------------------------C Program to Find Sum of Odd Numbers in an Array-----------------------------------------------------------

#include<stdio.h>
int main()
{
	int arr[1000],i,j,len,count=0;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	printf("enter the elements of array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
		for(j=0;j<len;j++)
	{
			if(arr[j]%2!=0)
			{
				count++;
			}
	}
	printf("the odd numbers in the array is=%d",count);
	return 0;
}


-------------------------------------------------------C Program to Find Sum of Even Numbers in an Array--------------------------------------------------------------

#include<stdio.h>
int main()
{
	int arr[1000],i,j,len,sum=0;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	printf("enter the elements of array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
		for(j=0;j<len;j++)
	{
			if(arr[j]%2==0)
			{
				sum=sum+arr[j];
			}
	}
	printf("the sum of even numbers in the array is=%d",sum);
	return 0;
}


--------------------------------------------------C Program to Find Sum of Even and Odd Numbers Separately in an Array-------------------------------------------------

#include<stdio.h>
int main()
{
	int arr[1000],i,j,len,even_sum=0,odd_sum=0;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	printf("enter the elements of array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
		for(j=0;j<len;j++)
	{
			if(arr[j]%2==0)
			{
				even_sum=even_sum+arr[j];
			}
			else
			{
			    odd_sum=odd_sum+arr[j];
			}
	}
	printf("the sum of even numbers in the array is=%d\n",even_sum);
	printf("the sum of odd numbers in the array is=%d",odd_sum);
	return 0;
}


----------------------------------------------------------C Program to Sum of Cubes of Array Elements------------------------------------------------------------------

#include<stdio.h>
int cube_fun(int c)
{
	int cube;
	cube = c*c*c;
	return cube;
}
int main()
{
	int arr[1000],i,j,len,cube_sum=0;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	printf("enter the elements of array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
		for(j=0;j<len;j++)
	{
	 	cube_sum=cube_sum+cube_fun(arr[j]);
	}
	printf("the sum of cube of numbers in the array is=%d",cube_sum);
	return 0;
}
-------------------------------------------------------------C  Program to Find Square of Elements of an Array---------------------------------------------------------

#include<stdio.h>
int square_func(int s)
{
	int square;
	square = s*s;
	return square;
}
int main()
{
	int arr[1000],i,j,len,square=0;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	printf("enter the elements of array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
		for(j=0;j<len;j++)
	{
		square=square_func(arr[j]);
		printf("%d\t",square);
	}
	return 0;
}


-------------------------------------------------------------C  Program to find the smallest number in an unsorted array-----------------------------------------------

#include<stdio.h>
int main()
{
	int arr[1000],i,j=0,len,smallest;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	printf("enter the elements of array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
	smallest=arr[0];
		for(j=0;j<len;j++)
	{
			if(arr[j]<smallest)
			{
				smallest=arr[j];
			}
	}
		
	printf("the smallest numbers in the array is=%d",smallest);
	return 0;
}


-------------------------------------------------------C programm to find the largest and smallest number in an unsorted array?----------------------------------------

#include<stdio.h>
int main()
{
	int arr[1000],i,j=0,len,smallest,largest,k,a;
	printf("enter the length of the array\n");
	scanf("%d",&len);
	
	printf("enter the elements of array\n");
	for(i=0;i<len;i++)
	{
		scanf("%d",&arr[i]);
	}
	smallest=arr[0];
		for(j=0;j<len;j++)
	{
			if(arr[j]<smallest)
			{
				smallest=arr[j];
			}
	}
	printf("the smallest numbers in the array is=%d\n",smallest);
 	largest=arr[0];
 	for(j=0;j<len;j++)
 	{
 		if(arr[j]>largest)
 		{
 			largest=arr[j];
 		}
 	}
	printf("the largest numbers in the array is=%d",largest);\  
	return 0;
}


-------------------------------------------------C programm to find the sec_largest and sec_smallest number in an unsorted array?--------------------------------------

#include <stdio.h>
int main() 
{
 int arr[100],i,largest,len,smallest;
 int sec_smallest,sec_largest;
 printf("enter the length of the array\n");
 scanf("%d",&len);
 for(i=0;i<len;i++)
 {
	 scanf("%d",&arr[i]);
 }
 largest=arr[0]; 
 for(i=0;i<len;i++)
 {
	 if(largest<arr[i])
	  {
		 largest=arr[i];
	  }
 }
printf("the largest element is =%d\n",largest);
 smallest=largest;
 sec_smallest=largest;
 for(i=0;i<len;i++)
 {
	 if(arr[i]<smallest)
	 {
		 sec_smallest = smallest;
		 smallest = arr[i];
	 }
	 else if(arr[i]<sec_smallest)
	 {
		 sec_smallest = arr[i];
	 }
 } 
printf("the smallest element =%d the second smallest element =%d\n",smallest,sec_smallest);
  largest =0;
  sec_largest=0;
  for(i=0;i<len;i++)
  {
	  if(arr[i]>largest)
	  {
		  sec_largest = largest;
		  largest = arr[i];
	  } 
	  else if(arr[i]>sec_largest)
	  {
		  sec_largest = arr[i];
	  }
  }
printf("the second largest element =%d\n",sec_largest);
	return 0;
}

------------------------------------------------------------------C programm bubble sort of an unsorted array----------------------------------------------------------

#include<stdio.h>
int main()
{
    int arr[100],i,bubble_sorted,len,j,temp;
    printf("enter the lenght of the array\n");
    scanf("%d",&len);
    printf("enter the elements of array\n");
    for(i=0;i<len;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("the elements after bubble sorting is=\n");
    for(i=0;i<=len;i++)
    {
        for(j=0;j<len;j++)
        {
        if(arr[i]<arr[i+1])
        {
            temp=arr[i];
            arr[i]=arr[i+1];
            arr[i+1]=temp;
        }
        }
         printf("%d\n",arr[i]);
    }
    
  
    return 0;
}

















